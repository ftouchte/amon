#!/bin/bash

# Script : build_ahdc_mapping

# Usage : 
# - download the translation table in txt format from https://clasweb.jlab.org/cgi-bin/ccdb/versions?table=/daq/tt/ahdc
# - name it ahdc_tt.txt
# - copy/paste it in the same directory as this script
# - open the file, remove the comments. Typically the file should contained 576 lines and file something like (not necessary the same value)
#         79 1 65 1 51 47 0
#         79 1 66 1 51 44 0
# - run ./script_build_ahdc_mapping
# - the script wimm generate two output ./AhdcMapping.h and ./AhdcMapping.cpp
# - up to you to replace these files in the ../src directory (I don't want to move automatically to do not break everything: the hv sector numerotation has chnaged a lot).

TABLE="./ahdc_tt.txt"
OUTPUT_H="./AhdcMapping.h"
OUTPUT_CPP="./AhdcMapping.cpp"

##################################
# FILE .H
##################################

if [[ -f $OUTPUT_H ]]; then
	rm "$OUTPUT_H"
fi
touch "$OUTPUT_H"

echo "/********************************************" >> $OUTPUT_H
echo "* file generated by the script ./mapping" >> $OUTPUT_H
echo "* mapping.h" >> $OUTPUT_H
echo "*" >> $OUTPUT_H
echo "* @author Felix Touchte Codjo" >> $OUTPUT_H
echo "* @date $(date "+%B %d, %Y  %T")" >> $OUTPUT_H
echo "* *******************************************/" >> $OUTPUT_H
echo "" >> $OUTPUT_H
echo "" >> $OUTPUT_H
echo "#ifndef AHDC_MAPPING_H" >> $OUTPUT_H
echo "#define AHDC_MAPPING_H" >> $OUTPUT_H
echo "" >> $OUTPUT_H
echo "class AhdcMapping {" >> $OUTPUT_H
echo "public :" >> $OUTPUT_H
echo "        static void GetDreamChannel(int sector, int layer, int component, int &crate, int & slot, int & channel);" >> $OUTPUT_H
echo "};" >> $OUTPUT_H
echo "" >> $OUTPUT_H
echo "#endif" >> $OUTPUT_H

echo "File created : AhdcMapping.h   --  $(date)"

##################################
# FILE .CPP
##################################

if [[ -f $OUTPUT_CPP ]]; then
	rm "$OUTPUT_CPP"
fi
touch "$OUTPUT_CPP"

echo "/********************************************" >> $OUTPUT_CPP
echo "* file generated by the script ./mapping" >> $OUTPUT_CPP
echo "* mapping.cpp" >> $OUTPUT_CPP
echo "*" >> $OUTPUT_CPP
echo "* @author Felix Touchte Codjo" >> $OUTPUT_CPP
echo "* @date $(date "+%B %d, %Y  %T")" >> $OUTPUT_CPP
echo "* *******************************************/" >> $OUTPUT_CPP
echo "" >> $OUTPUT_CPP
echo "" >> $OUTPUT_CPP
echo "#include \"AhdcMapping.h\"" >> $OUTPUT_CPP
echo "" >> $OUTPUT_CPP
echo "" >> $OUTPUT_CPP

echo "" >> $OUTPUT_CPP
echo "void AhdcMapping::GetDreamChannel(int sector, int layer, int component, int &crate, int & slot, int & channel) {" >> $OUTPUT_CPP

#loop over rows
first=0
while read -r line; do
	if [[ $line == [1-9]* ]]; then
		crate=""
		slot=""
		chan=""
		sector=""
		layer=""
		comp=""
		counter=0
		for entry in $line; do
			((counter++))
			if   [[ $counter == 1 ]]; then
				crate=$entry
			elif [[ $counter == 2 ]]; then
				slot=$entry
			elif [[ $counter == 3 ]]; then
				chan=$entry
			elif [[ $counter == 4 ]]; then
				sector=$entry
			elif [[ $counter == 5 ]]; then
				layer=$entry
			elif [[ $counter == 6 ]]; then
				comp=$entry
			fi
		done
		#echo "$crate $slot $chan $sector $layer $comp"
		if [[ $first == 0 ]]; then
			echo "        if ((sector == $sector) && (layer == $layer) && (component == $comp)) {" >> $OUTPUT_CPP
			((first++))
		else
			echo "        else if ((sector == $sector) && (layer == $layer) && (component == $comp)) {" >> $OUTPUT_CPP
		fi
		echo "                crate   = $crate;" >> $OUTPUT_CPP
		echo "                slot    = $slot;" >> $OUTPUT_CPP
		echo "                channel = $chan;" >> $OUTPUT_CPP
		echo "        }" >> $OUTPUT_CPP
	fi
done < $TABLE

echo "        else {" >> $OUTPUT_CPP
echo "                crate   = -1;" >> $OUTPUT_CPP
echo "                slot    = -1;" >> $OUTPUT_CPP
echo "                channel = -1;" >> $OUTPUT_CPP
echo "        }" >> $OUTPUT_CPP

echo "}" >> $OUTPUT_CPP
echo "" >> $OUTPUT_CPP

echo "File created : AhdcMapping.cpp   --  $(date)"
